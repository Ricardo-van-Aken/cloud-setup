name: foundation-02-github-organization-variables

on:
  workflow_dispatch:
  # workflow_run:
  #   workflows: ["foundation-01-remote-state"]
  #   types: [completed]

jobs:
  apply:
    runs-on: ubuntu-latest
    environment: production
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name != 'workflow_run' }}
    permissions:
      contents: read
    env:
      # DigitalOcean Spaces bucket name and access key, used for terraform remote state.
      TF_VAR_region: ${{ vars.DO_STATE_BUCKET_REGION }}
      TF_VAR_bucket_name: ${{ vars.DO_STATE_BUCKET_NAME }}
      AWS_ACCESS_KEY_ID: ${{ secrets.SPACES_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.SPACES_SECRET_KEY }}

      # Terraforms Github provider authorization
      TF_VAR_github_org_token: ${{ secrets._GITHUB_ORG_VARS_TOKEN }}
      TF_VAR_github_organization: ${{ vars.organization_NAME }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Generate Backend Configuration
        working-directory: terraform/02-github-organization-variables
        run: |
          # Source the common script
          source ../../scripts/common.sh
          # Generate backend.hcl using the common function
          generate_backend_file "${{ vars.DO_STATE_BUCKET_REGION }}" "${{ vars.DO_STATE_BUCKET_NAME }}" "../backend.hcl"

      - name: Terraform Init
        working-directory: terraform/02-github-organization-variables
        run: terraform init -backend-config ../backend.hcl -backend-config="key=foundation/02-github-organization-variables/terraform.tfstate"

      - name: Terraform Plan
        working-directory: terraform/02-github-organization-variables
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        working-directory: terraform/02-github-organization-variables
        run: terraform apply tfplan

